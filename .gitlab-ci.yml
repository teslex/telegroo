image: gradle:latest

stages:
  - test
  - build
  - publish


test:
  stage: test
  script:
    - echo "token=${TEST_BOT_TOKEN}" >> telegroo/src/test/resources/test.properties
    - gradle test


build:
  stage: build
  script: gradle clean build
  artifacts:
    paths:
      - build/libs/telegroo*.jar
  only:
    - master


publish-teslex:
  stage: publish
  script:
    - gradle clean publish
    - git clone https://gitlab.com/teslex/repo
    - cp -r telegram-api/build/repo/* repo
    - cp -r telegroo-api/build/repo/* repo
    - cp -r telegroo/build/repo/* repo
    - cd repo
    - git config --global user.name 'TesLex Bot'
    - git config --global user.email 'teslex.bot@gmail.com'
    - git add .
    - git commit -m 'Update telegroo'
    - git push https://teslex.bot:${GITLAB_PRIVATE_KEY}@gitlab.com/teslex/repo
  only:
    - master


publish-teslex-snapshot:
  stage: publish
  script:
    - "[ $(gradle properties -q | grep 'isSnapshot:' | awk '{print $2}') != 'true' ] && exit 1"
    - gradle clean publish
    - git clone https://gitlab.com/teslex/repo
    - cp -r telegram-api/build/repo/* repo
    - cp -r telegroo-api/build/repo/* repo
    - cp -r telegroo/build/repo/* repo
    - cd repo
    - git config --global user.name 'TesLex Bot'
    - git config --global user.email 'teslex.bot@gmail.com'
    - git add .
    - git commit -m 'Update telegroo'
    - git push https://teslex.bot:${GITLAB_PRIVATE_KEY}@gitlab.com/teslex/repo
  only:
    - '1.0'


bintray-upload:
  stage: publish
  script:
    - "[ $(gradle properties -q | grep 'isSnapshot:' | awk '{print $2}') == 'true' ] && exit 1"
    - gradle test
    - gradle bintrayUpload
  only:
    - master
