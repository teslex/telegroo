plugins {
	id 'java'

	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
}

dependencies {
	compile project(':telegroo-api')

	Connect(it).lombok()

//	implementation D.httpcomponents.httpcore
//	implementation D.httpcomponents.httpclient
//	implementation D.httpcomponents.fluentHc
//	implementation D.httpcomponents.httpmime

	implementation D.jackson.core
	implementation D.jackson.datatype

	implementation 'com.konghq:unirest-java:2.3.14'

	Connect(it).slf4j()

//	testCompile 'org.spockframework.spock:spock-core:spock-1.2', {
//		exclude group: 'org.codehaus.groovy', module: 'groovy-all'
//	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'tech.teslex.telegroo'
			artifactId 'telegroo'
			version version

			from components.java
//			artifact sourcesJar

			pom {
				name = 'telegroo'
				url = 'https://gitlab.com/teslex/telegroo/telegroo'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'https://gitlab.com/teslex/telegroo/telegroo/blob/master/LICENSE'
					}
				}

				developers {
					developer {
						id = 'expexes'
						name = 'Davyd Kohut'
						email = 'expexes@gmail.com'
					}
				}

				scm {
					connection = 'scm:git:git://gitlab.com/teslex/telegroo/telegroo.git'
					developerConnection = 'scm:git:ssh://gitlab.com/teslex/telegroo/telegroo.git'
					url = 'https://gitlab.com/teslex/telegroo/telegroo'
				}
			}
		}
	}

	repositories {
		maven {
			def releasesRepoUrl = "$buildDir/repo"
			def snapshotsRepoUrl = "$buildDir/repo/snapshots"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')

	publications = ['maven']

	pkg {
		repo = 'telegroo'
		name = 'telegroo-reactive'
		userOrg = 'expexes'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://gitlab.com/teslex/telegroo/telegroo.git'
	}

	version {
		name = version
		released = new Date()
		vcsTag = version
	}
}

def getVersion() {
	telegrooVersion
}
