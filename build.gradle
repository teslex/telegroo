ext {
	numberVersion = '0.1.0'
	isSnapshot = true
	snapshotId = dateSnapshotId

	telegrooVersion = isSnapshot ? "$numberVersion-${snapshotId}-snapshot" : numberVersion

	groovyVersion = '2.5.7'
//	groovyVersion = '3.0.0-beta-1'
	jacksonVersion = '2.9.6'

	lombokVersion = '1.18.8'

	rxJavaVersion = '2.2.9'

	slf4jVersion = '1.7.26'

	logbackVersion = '1.2.3'
	logbackContribVersion = '0.1.5'

	apacheHttpCoreVersion = '4.4.10'
	apacheHttpClientVersion = '4.5.6'
	apacheHttpFluentHcVersion = '4.5.6'
	apacheHttpHttpMimeVersion = '4.5.6'

	javaxAnnotation = '1.3.2'
	javaxValidation = '2.0.0.Final'

	D = [
			jackson: [
					core        : "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
					annontations: "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
					datatype    : "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
			],

			groovy : [
					groovy: "org.codehaus.groovy:groovy:$groovyVersion"
			],

			lombok : [
					annotationProcessor: "org.projectlombok:lombok:$lombokVersion",
					implementation     : "org.projectlombok:lombok:$lombokVersion"
			],

			logback: [
					core        : "ch.qos.logback:logback-core:$logbackVersion",
					classic     : "ch.qos.logback:logback-classic:$logbackVersion",
					jsonClassic: "ch.qos.logback.contrib:logback-json-classic:$logbackContribVersion",
					jackson     : "ch.qos.logback.contrib:logback-jackson:$logbackContribVersion"
			],

			httpcomponents: [
					httpcore: "org.apache.httpcomponents:httpcore:$apacheHttpCoreVersion",
					httpclient: "org.apache.httpcomponents:httpclient:$apacheHttpClientVersion",
					fluentHc: "org.apache.httpcomponents:fluent-hc:$apacheHttpFluentHcVersion",
					httpmime: "org.apache.httpcomponents:httpmime:$apacheHttpHttpMimeVersion",
			],
			slf4j: [
				api: "org.slf4j:slf4j-api:$slf4jVersion",
				simple: "org.slf4j:slf4j-simple:$slf4jVersion",
			],

			javax                 : [
					annotationApi: "javax.annotation:javax.annotation-api:$javaxAnnotation",
					validationApi: "javax.validation:validation-api:$javaxValidation",
			],
	]

	Connect = { ctx ->
		[
				lombok : {
					ctx.annotationProcessor(D.lombok.annotationProcessor)
					ctx.implementation(D.lombok.implementation)
				},

				logback: {
					ctx.implementation(D.logback.classic)
					ctx.implementation(D.logback.jsonClassic)
					ctx.implementation(D.logback.jackson)
				},
				slf4j: {
					ctx.implementation(D.slf4j.api)
					ctx.implementation(D.slf4j.simple)
				}
		]
	}
}

subprojects {
	version = telegrooVersion

	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }

		if (version.toLowerCase().endsWith('SNAPSHOT'))
			maven { url 'https://teslex.gitlab.io/repo/snapshots' }
	}
}

static getDateSnapshotId() {
	return new Date().format('yyyyMMddHHmmss')
}
